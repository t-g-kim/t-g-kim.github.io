<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TG DEV on 게을러지지마</title>
    <link>https://log.readme.website/</link>
    <description>Recent content in TG DEV on 게을러지지마</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>tgkim</copyright>
    <lastBuildDate>Wed, 10 Jan 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://log.readme.website/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>markdown 문법</title>
      <link>https://log.readme.website/markdown/</link>
      <pubDate>Wed, 10 Jan 2024 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/markdown/</guid>
      <description>test</description>
    </item>
    
    <item>
      <title>텍스트기반 GIT UI, tig</title>
      <link>https://log.readme.website/tig/</link>
      <pubDate>Wed, 29 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/tig/</guid>
      <description>hi</description>
    </item>
    
    <item>
      <title>gitbook 만들기</title>
      <link>https://log.readme.website/gitbook-%EB%A7%8C%EB%93%A4%EA%B8%B0/</link>
      <pubDate>Mon, 24 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/gitbook-%EB%A7%8C%EB%93%A4%EA%B8%B0/</guid>
      <description>GitBook 생성방법 요구사항
 node 14버전 이하  gitbook-cli 설치 $ npm install gitbook-cli -g gitbook init # 해당 디렉토리에서 $ gitbook init local server start $ gitbook serve # ... # Starting server ... # Serving book on http://localhost:4000 branch는 gh-pages로 변경 $ git checkout -b gh-pages # push도 gh-pages로 한다. 목차 생성 파일 Summary
SUMMARY.md 예시
* [Introduction](README.md) * [Part I](part1/README.md) * [Writing is nice](part1/writing.md) * [GitBook is nice](part1/gitbook.</description>
    </item>
    
    <item>
      <title>NestJS로 배우는 백엔드 프로그래밍</title>
      <link>https://log.readme.website/book-nestjs%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%B2%A1%EC%97%94%EB%93%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</link>
      <pubDate>Tue, 11 Jul 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/book-nestjs%EB%A1%9C-%EB%B0%B0%EC%9A%B0%EB%8A%94-%EB%B2%A1%EC%97%94%EB%93%9C%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/</guid>
      <description>1장 NestJS의 장점 NestJS는 Node.js에 기반을 둔 웹 API 프레임워크로서 Express 또는 Fastify 프레임워크를 래핑하여 동작한다.
Express와 Fastify는 모두 Node.js를 쉽게 사용하기 위해 만들어진 프레임워크
NestJS는 기본 설치시 Express를 사용
벤치마크 결과 Fastify가 Express보다 2배 빠르지만 Express를 사용하는 이유는 Express가 널리 사용되고 있고 많은 미들웨어가 NestJS와 호환되기 때문
NestJS는 Angular의 영향을 많이 받았다. 모듈/컴포넌트 기반으로 프로그램을 작성하고 재사용성을 높인다..
제어의 역전, 의존성 주입, AOP같은 객체 지향 개념을 도입
언어는 타입스크립트를 기반으로 채택</description>
    </item>
    
    <item>
      <title>Advanced Markdown</title>
      <link>https://log.readme.website/new-post-3/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/new-post-3/</guid>
      <description>In this post, we&amp;rsquo;ll dive into some advanced Markdown features.
Task Lists You can create task lists with checkboxes. Here&amp;rsquo;s an example:
 Task 1 Task 2 Task 3  Footnotes Markdown supports footnotes. Here&amp;rsquo;s an example:
Here is some text with a footnote1.
Horizontal Rule You can insert a horizontal rule to separate sections. Here&amp;rsquo;s an example:
 That&amp;rsquo;s all for now. I hope you find these advanced Markdown features helpful!</description>
    </item>
    
    <item>
      <title>Markdown Formatting</title>
      <link>https://log.readme.website/new-post-2/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/new-post-2/</guid>
      <description>In this post, we&amp;rsquo;ll explore various formatting options available in Markdown.
Emphasis You can emphasize text using italic or bold styles.
Quotes Markdown allows you to include block quotes. Here&amp;rsquo;s an example:
 &amp;ldquo;The only way to do great work is to love what you do.&amp;rdquo; - Steve Jobs adfadf
 Images/Figures You can include images as figure in your posts. Here&amp;rsquo;s an example:
 Emergence of Mandakini river from kedar peak</description>
    </item>
    
    <item>
      <title>Markdown?</title>
      <link>https://log.readme.website/new-post-1/</link>
      <pubDate>Sun, 21 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/new-post-1/</guid>
      <description>Introduction Welcome to my first post! In this post, I will discuss various Markdown features and show you how to use them effectively.
Headings You can use headings to structure your content. Here&amp;rsquo;s an example:
Subheading Lists Markdown supports both ordered and unordered lists. Here are examples of both:
 Item 1 Item 2 Item 3   Unordered item 1 Unordered item 2 Unordered item 3  Links You can create links to external websites or internal pages.</description>
    </item>
    
    <item>
      <title>Ubuntu 명령어</title>
      <link>https://log.readme.website/ubuntu-command/</link>
      <pubDate>Sun, 14 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/ubuntu-command/</guid>
      <description>nvm 설치
# curl $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.36.0/install.sh | bash # 설정 리로드 $ source ~/.bashrc $ nvm --version </description>
    </item>
    
    <item>
      <title>AWS Lambda로 시작하는 서비스</title>
      <link>https://log.readme.website/book-aws-lambda%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/book-aws-lambda%EB%A1%9C-%EC%8B%9C%EC%9E%91%ED%95%98%EB%8A%94-%EC%84%9C%EB%B9%84%EC%8A%A4/</guid>
      <description>서버(Server) + 리스(Less)의 합성어라 간혹 &amp;lsquo;서버가 없다&amp;rsquo;라고 문자 그대로 이해할 수 있지만, 절대 그렇지 않다.
서버리스(Serverless)는 클라우드 컴퓨팅의 모델 중 하나로 개발자가 서버를 직접 관리할 필요가 없는 아키텍처를 의미한다.
하지만 서버리스는 동적으로 서버의 자원을 할당한다.
사용자가 없다면 자원을 할당하지 않고 대기하다 요청이 들어오면 그 때 자원을 할당해서 요청을 처리하고 다시 대기 상태로 들어가게 된다. 즉, 자원을 효율적으로 사용할 수 있는 것이다. 비용 또한 대기상태를 제외한 실제 사용 자원에 대해서만 청구되기 때문에 굉장히 경제적이며, 해당 서버는 클라우드 제공 기업에서 전적으로 관리하기 때문에 개발자는 스케일링, 업데이트, 백업, 보안 등 서버에 대해 일절 관리하거나 신경 쓸 필요가 없어 비즈니스 로직에 집중하여 개발을 할 수 있다.</description>
    </item>
    
    <item>
      <title>Code Syntax Guide</title>
      <link>https://log.readme.website/code-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/code-syntax/</guid>
      <description>Inline Code This is Inline Code
Only pre  This is pre text  Code block with backticks &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;utf-8&amp;#34; /&amp;gt; &amp;lt;title&amp;gt;Example HTML5 Document&amp;lt;/title&amp;gt; &amp;lt;meta name=&amp;#34;description&amp;#34; content=&amp;#34;Sample article showcasing basic Markdown syntax and formatting for HTML elements.&amp;#34; /&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;p&amp;gt;Test&amp;lt;/p&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; Code block with backticks and language specified 1 2 3 4 5 6 7 8 9 10 11 12 13 14  &amp;lt;!</description>
    </item>
    
    <item>
      <title>Markdown Syntax Guide</title>
      <link>https://log.readme.website/markdown-syntax/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/markdown-syntax/</guid>
      <description>&lt;p&gt;This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>면접질문 정리</title>
      <link>https://log.readme.website/interview/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/interview/</guid>
      <description>elasticsearch에서 text와 keyword의 차이점은?  text 타입은 입력된 문자열을 텀 단위로 쪼개어 역 색인 (inverted index) 구조를 만듭니다. 보통은 풀텍스트 검색에 사용할 문자열 필드 들을 text 타입으로 지정합니다. keyword 타입은 입력된 문자열을 하나의 토큰으로 저장합니다. text 타입에 keyword 애널라이저를 적용 한 것과 동일합니다. exact match를 활용 할 때 사용. (보통은 집계(aggregation) 또는 정렬(sorting)에 사용할 문자열 필드를 keyword 타입으로 지정합니다.)
참고
https://esbook.kimjmin.net/07-settings-and-mappings/7.2-mappings/7.2.1
  운영체제에서 프로그램의 실행을 다양한 메모리 공간이 제공됩니다.</description>
    </item>
    
    <item>
      <title>싱글톤 패턴</title>
      <link>https://log.readme.website/singleton/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/singleton/</guid>
      <description>java Singleton 예제 public class Singleton { private static Singleton instance = new Singleton(); private int count = 0; private Singleton() { // 외부에서 호출하지 못하게 기본 생성자는 private로 지정  } public static Singleton getInstance() { return instance; } public void increaseCount() { count++; } public int getCount() { return count; } } java Singleton 예제2 public class Singleton { // Thread safe하지 않다.  private static Singleton singleton = null; private Singleton(){} public Singleton02 getInstance() { if (singleton == null) { singleton = new Singleton(); } return singleton; } } 위의 예제는 Multi-Thread환경에서 Thread safe하지 못하다.</description>
    </item>
    
    <item>
      <title>싱글톤 패턴</title>
      <link>https://log.readme.website/test/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/test/</guid>
      <description>asdfasdf</description>
    </item>
    
    <item>
      <title>Rich Content</title>
      <link>https://log.readme.website/rich-content/</link>
      <pubDate>Sun, 10 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/rich-content/</guid>
      <description>&lt;p&gt;Hugo ships with several &lt;a href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugos-built-in-shortcodes&#34;&gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;&gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Placeholder Text</title>
      <link>https://log.readme.website/placeholder-text/</link>
      <pubDate>Sat, 09 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/placeholder-text/</guid>
      <description>&lt;p&gt;Lorem est tota propiore conpellat pectoribus de pectora summo.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Math Typesetting</title>
      <link>https://log.readme.website/math-typesetting/</link>
      <pubDate>Fri, 08 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/math-typesetting/</guid>
      <description>&lt;p&gt;Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Key0</title>
      <link>https://log.readme.website/key0/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/key0/</guid>
      <description>Header A Cursus nisi fames at class integer volutpat sem phasellus, pharetra rutrum proin imperdiet aenean a ac, mollis dapibus id morbi accumsan eleifend magna. Habitant vitae pharetra consequat vulputate cras varius luctus feugiat laoreet, lacus eleifend cursus aptent purus quisque nam netus, mus quis interdum ligula et vel sagittis magna. Enim sodales cubilia ad fames mi faucibus quisque risus, ultrices massa libero interdum congue nec imperdiet nostra, himenaeos nunc magna potenti augue ac sagittis.</description>
    </item>
    
    <item>
      <title>Key1</title>
      <link>https://log.readme.website/key1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://log.readme.website/key1/</guid>
      <description>Header A Lorem ipsum dolor sit amet consectetur adipiscing, elit lobortis felis magnis ullamcorper placerat elementum, donec auctor nisi nunc facilisis. Porttitor curabitur eros inceptos senectus aptent vel facilisi dignissim, pharetra suspendisse volutpat vitae molestie semper vivamus, ut sapien risus cursus leo nulla habitasse. Massa volutpat nibh semper urna ligula hendrerit torquent, venenatis phasellus magnis inceptos diam pharetra maecenas accumsan, erat per elementum pretium laoreet sagittis. asdaf
&amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; {{ partial &amp;#34;head.</description>
    </item>
    
  </channel>
</rss>
